[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "emfuzzer"
# TODO description
version = "0.0.0"  # set by poetry
requires-python = ">= 3.13"
dependencies = [
  "paramiko==3.5.1",
]
# TODO authors
authors = [
    {name = "Konrad Grochowski",email = "Konrad.Grochowski@pw.edu.pl"},
]
readme = "README.md"
license = { text = "MIT" }
license-files = ["LICEN[CS]E.*"]

# TODO [project.urls]

# TODO [project.scripts]

# TODO [project.entry-points.

[project.optional-dependencies]
dev = [
  "black==24.10.0",
  "flake8-pyproject==1.2.3",
  "flake8==7.1.1",
  "isort==5.13.2",
  "mypy==1.14.0",
  "mypy_extensions==1.0.0",
  "pycodestyle==2.12.1",
  "pyflakes==3.2.0",
  "pylint==3.3.6",
  "pytest==8.3.4",
  "types_paramiko==3.5.0.20240928",
]

[tool.poetry]
packages = [{include = "emfuzzer"}]
requires-poetry = ">=2.1.2"

[tool.poetry.requires-plugins]
poetry-git-version-plugin = ">=2.0.1"

[tool.poetry-git-version-plugin]
release_type = "dev"
local = true

[tool.mypy]
strict = true

[tool.isort]
profile = "black"
skip_gitignore = true
line_length = 100

[tool.flake8]
max-line-length = 100
exclude = [
  "__pycache__",
  ".venv",
]

[tool.pytest.ini_options]
pythonpath = "."
testpaths = "tests"

[tool.pylint.main]
ignore = [
  "__pycache__",
  ".venv",
  ".git",
]
jobs = 0

[tool.pylint.format]
max-line-length = 100

[tool.pylint.logging]
logging-format-style = "new"

[tool.pylint."messages control"]
disable = [
  "missing-function-docstring",
  "missing-module-docstring", # TODO
  "missing-class-docstring", # TODO ?
  "logging-fstring-interpolation",
]
enable = [
  "useless-suppression",
]

[tool.pylint.similarities]
# TODO
min-similarity-lines = 5

[tool.pylint.imports]
allow-reexport-from-package = true
