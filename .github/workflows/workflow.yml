name: Emfuzzer Workflow

on: [push, pull_request]

jobs:
  build:
    name: Check and build package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-install-20250602

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --with=dev --no-root

      - name: Run isort
        run: poetry run isort --check .

      - name: Run black
        run: poetry run black --check .

      - name: Run codespell
        run: poetry run codespell

      - name: Run flake8
        run: poetry run flake8 .

      - name: Run mypy
        run: poetry run mypy .

      - name: Run pylint
        run: poetry run pylint .

      - name: Run pytest
        run: poetry run pytest

      - name: Build distribution
        run: poetry build

      - name: Store built distribution
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish package to PyPI
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/emfuzzer
    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
